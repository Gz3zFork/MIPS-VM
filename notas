el proyecto a presentar se trata de un compilador de codigo MIPS el cual traduce
el codigo assembler a instrucciones que luego un procesador emulado ejecuta.
el proyecto se divide en 2 partes:
    emular el procesador MIPS el cual recibe sus instrucciones de un archivo y
    las ejecuta

    crear un lexer y parser el cual es capaz de traducir un programa escrito
    en el assembler de MIPS y generar un archivo el cual el procesador es capaz
    de interpretar

PROCESADOR MIPS

para emular el procesador vamos a mantener todos los registros en memoria y a
medida que se interpretan las instrucciones estos van modificandose.
para eso definimos a los registros como un array de 32 enteros de 32 bits
y 3 variables de enteros de 32 bits para  los registros LO, HI y PC.

la interpretacion de las instrucciones se lleva a cabo primero decodificando
estas y mapeando su significado a una funcion respectiva.
